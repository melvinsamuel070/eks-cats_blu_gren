apiVersion: apps/v1
kind: Deployment
metadata:
  name: sinatra-green
  namespace: prometheus
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  selector:
    matchLabels:
      app: sinatra
      version: green
  template:
    metadata:
      labels:
        app: sinatra
        version: green
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: sinatra
          image: melvinsamuel070/sanity:__VERSION__
          ports:
            - containerPort: 8000
          env:
            - name: RACK_ENV
              value: production
            - name: PORT
              value: "8000"
            - name: WEB_CONCURRENCY
              value: "2"
            - name: MAX_THREADS
              value: "4"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 40
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 30"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
